---
import { twMerge } from '@daks.dev/astro.sdk';
import type { HTMLAttributes } from 'astro/types';

interface Props extends Omit<HTMLAttributes<'button'>, 'class'> {
  class?: ClassValue;
  custom?: Record<string, ClassValue>;
  label?: string;
  vertical?: true;
}

const {
  class: className,
  custom = {},
  vertical,
  'aria-label': ariaLabel,
  label = ariaLabel || 'цветовая тема',
  ...props
} = Astro.props;
---

<button
  is='app-theme-toggle-shift'
  class={twMerge(
    'group',
    'relative',
    'flex items-center',
    vertical && 'flex-col',
    'outline-none select-none',
    'rounded-full border border-gray-300 dark:border-gray-700',
    'shadow-inset shadow-slate-300 dark:shadow-slate-600',
    className
  )}
  aria-label={label}
  {...props}>
  <span
    class:list={twMerge(
      'absolute z-0 aspect-square',
      vertical ? 'inset-x-0 dark:translate-y-full' : 'inset-y-0 dark:translate-x-full',
      'aspect-square',
      'rounded-full bg-slate-400 dark:bg-slate-600',
      'duration-300 motion-safe:transition-transform',
      'bg-only',
      custom.shift
    )}
    set:text={label}
  />
  <div class:list={['flex p-1', 'dark:text-theme-plain text-white']}>
    <span class:list={['block size-5', custom.light]}></span>
  </div>
  <div class:list={['flex p-1', 'text-theme-plain dark:text-black']}>
    <span class:list={['block size-5', custom.dark]}></span>
  </div>
</button>

<script>
  import AppThemeToggle from './AppThemeToggle.js';

  customElements.define('app-theme-toggle-shift', AppThemeToggle, { extends: 'button' });
</script>
